# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа. Числа и знак операции
# вводятся пользователем. После выполнения вычисления программа не должна завершаться, а должна запрашивать новые
# данные для вычислений. Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке
# и снова запрашивать знак операции. Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в
# качестве делителя.

calculator = input('Введите знак операции (+, -, *, /) или 0 для выхода: ')
match calculator:
    case '0':
        print('Конец!')
    case '+':
        x = int(input('Введите первое число: '))
        y = int(input('Введите второе число: '))
        z = x + y
        print(f'{x} + {y} = {z}')
    case '-':
        x = int(input('Введите первое число: '))
        y = int(input('Введите второе число: '))
        z = x - y
        print(f'{x} - {y} = {z}')
    case '*':
        x = int(input('Введите первое число: '))
        y = int(input('Введите второе число: '))
        z = x * y
        print(f'{x} * {y} = {z}')
    case '/':
        x = int(input('Введите первое число: '))
        y = int(input('Введите второе число: '))
        z = x / y
        print(f'{x} / {y} = {z}')

# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например, если введено число 34560, то у
# него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

number = input('Введите целое число: ')
odd = 0
even = 0
for i in number:
    if int(i) % 2 == 0:
        even += 1
    else:
        odd += 1
print(f'В числе {number}: {odd} нечетных и {even} четных цифр')

# 3. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран. Например,
# если введено число 3486, то надо вывести число 6843.

num = int(input('Введите целое число: '))
invers = 0
while num % 10 != 0 or num // 10 != 0:
    invers = invers * 10 + num % 10
    num //= 10
print(f'Обратное число = {invers}')

# 4. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...Количество элементов (n) вводится с клавиатуры

usern = int(input('Введите количество элементов ряда чисел 1 -0.5 0.25...: '))
row = 1
total = 0
for i in range(usern):
    total = row + total
    row = (row / 2) * (-1)
print(f'Сумма {usern} элементов ряда чисел: 1 -0.5 0.25... \nРавна: {total}')

# 5. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

cha = []
x = 0
y = 10
for i in range(32, 128):
    char = chr(i )
    cha.append([char, i])
for i in range(10):
    print(cha[x:y])
    x += 10
    y += 10

# 6. В программе генерируется случайное целое число от 0 до 100. Пользователь должен его отгадать не более чем за 10
# попыток. После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.

import random

number = random.randint(0, 101)
for i in range(10):
    num = int(input('Угадайте целое число от 0 до 100: '))
    if num == number:
        print('Поздравляем, вы угадали!')
        break
    elif num < number:
        print('Ваше число меньше загаданного')
    else:
        print('Ваше число больше загаданного')
print(f'Вы проиграли!\nЗагаданое число {number}')

# 7. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.



# 8. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел. Количество
# вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.



# 9. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр. Вывести на экран это число
# и сумму его цифр.


